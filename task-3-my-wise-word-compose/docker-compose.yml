services:
  app:
    build: .
    container_name: app
    ports:
      - "8086:80"
    environment:
      - DB_HOST=postgresdb
      - DB_USER=rivanapta
      - DB_PASSWORD=qwerty1
      - DB_NAME=postgres
    depends_on:
      - postgresdb
    networks:
      - net_my_compose_rivanapta
    # Add healthcheck to ensure the application is running
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgresdb:
    image: postgres:latest
    container_name: postgresdb
    environment:
      POSTGRES_PASSWORD: qwerty1
      POSTGRES_USER: rivanapta
      POSTGRES_DB: postgres
    volumes:
      - vol_my_compose_rivanapta:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    networks:
      - net_my_compose_rivanapta
    # Add healthcheck to ensure PostgreSQL is ready
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  net_my_compose_rivanapta:
    driver: bridge

volumes:
  vol_my_compose_rivanapta:
    name: vol_my_compose_rivanapta